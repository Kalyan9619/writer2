{"ast":null,"code":"var _jsxFileName = \"/home/kalyan/Downloads/Instagram-Web-App-MERN-Stack-Clone-master/client/src/screens/ResetPassword.js\",\n    _s = $RefreshSig$();\n\n/**\n *\n * @author Anass Ferrak aka \" ThedevilA \" <an.ferrak@gmail.com>\n * GitHub repo: https://github.com/ThedevilA/Instagram-Web-App-MERN-Stack-Clone\n *\n */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { RESET_PWD_URL } from \"../config/constants\"; // Material-UI Components\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\"; // General Styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"-webkit-fill-available\"\n  },\n  image: {\n    backgroundSize: \"cover\",\n    backgroundColor: \"#fafafa\",\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  },\n  container: {\n    margin: \" auto 0px\"\n  },\n  Logo: {\n    fontFamily: \"Grand Hotel, cursive\",\n    margin: \"40px 0px\"\n  },\n  paper: {\n    marginTop: \"50px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Reset = () => {\n  _s();\n\n  const history = useHistory();\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [emailCheck, setEmailCheck] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n  const timerRef = useRef();\n  useEffect(() => () => {\n    clearTimeout(timerRef.current);\n  }, []);\n\n  const PostData = () => {\n    // the Regex email validation was token from : https://emailregex.com/\n    if (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      axios.post(RESET_PWD_URL, {\n        email\n      }).then(res => {\n        const data = res.data;\n        console.log(data);\n\n        if (data.error) {\n          setEmailCheck(false);\n          setErrorMsg(true);\n        } else {\n          // make sure to not display another Alert instead\n          setEmailCheck(false);\n          setErrorMsg(false); // show the confirmation message\n\n          setSuccessMsg(true); // set a time before we redirect the user to login page\n\n          timerRef.current = setTimeout(() => {\n            history.push(\"/login\");\n          }, 3000);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setErrorMsg(false);\n      setEmailCheck(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.image,\n      item: true,\n      sm: 4,\n      md: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        style: {\n          paddingBottom: \"64px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.Logo,\n            variant: \"h2\",\n            gutterBottom: true,\n            style: {\n              fontFamily: \"Grand Hotel, cursive \"\n            },\n            children: \"Kalyan Somalaraju\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this), emailCheck ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"outlined\",\n            severity: \"error\",\n            children: \"Invalid Email format \\u2014 check it out!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 8\n          }, this) : null, errorMsg ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"outlined\",\n            severity: \"error\",\n            children: \"No User exists with that email \\u2014 check it Again !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 8\n          }, this) : null, successMsg ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"outlined\",\n            severity: \"success\",\n            children: \"The reset password link has been sent \\u2014 check out your email inbox !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 8\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              label: \"Email Address\",\n              name: \"email\",\n              autoFocus: true,\n              value: email,\n              onChange: e => {\n                setEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.submit,\n              disabled: email !== \"\" ? false : true,\n              onClick: () => PostData(),\n              children: \"Reset your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Reset, \"skNOMxAKPv9QbtT0t6AogNEZFcs=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/home/kalyan/Downloads/Instagram-Web-App-MERN-Stack-Clone-master/client/src/screens/ResetPassword.js"],"names":["React","useState","useRef","useEffect","Link","useHistory","axios","RESET_PWD_URL","Button","CssBaseline","TextField","Grid","Box","Typography","makeStyles","Container","Alert","useStyles","theme","root","height","image","backgroundSize","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","container","margin","Logo","fontFamily","paper","marginTop","display","flexDirection","alignItems","form","width","spacing","submit","Reset","history","classes","email","setEmail","emailCheck","setEmailCheck","errorMsg","setErrorMsg","successMsg","setSuccessMsg","timerRef","clearTimeout","current","PostData","test","post","then","res","data","console","log","error","setTimeout","push","catch","err","paddingBottom","e","target","value"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,qBAA9B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,wBAAlB,C,CAEA;;;AACA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH,GADkC;AAIxCC,EAAAA,KAAK,EAAE;AACNC,IAAAA,cAAc,EAAE,OADV;AAENC,IAAAA,eAAe,EAAE,SAFX;AAGNC,IAAAA,eAAe,EAAE,yCAHX;AAINC,IAAAA,gBAAgB,EAAE,WAJZ;AAKNC,IAAAA,kBAAkB,EAAE;AALd,GAJiC;AAWxCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,MAAM,EAAE;AADE,GAX6B;AAcxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,UAAU,EAAE,sBADP;AAELF,IAAAA,MAAM,EAAE;AAFH,GAdkC;AAkBxCG,EAAAA,KAAK,EAAE;AACNC,IAAAA,SAAS,EAAE,MADL;AAENC,IAAAA,OAAO,EAAE,MAFH;AAGNC,IAAAA,aAAa,EAAE,QAHT;AAINC,IAAAA,UAAU,EAAE;AAJN,GAlBiC;AAyBxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE,MADF;AACU;AACfL,IAAAA,SAAS,EAAEd,KAAK,CAACoB,OAAN,CAAc,CAAd;AAFN,GAzBkC;AA6BxCC,EAAAA,MAAM,EAAE;AACPX,IAAAA,MAAM,EAAEV,KAAK,CAACoB,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADD;AA7BgC,CAAZ,CAAD,CAA5B;;AAkCA,MAAME,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGpC,UAAU,EAA1B;AACA,QAAMqC,OAAO,GAAGzB,SAAS,EAAzB;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3C,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC8C,QAAD,EAAWC,WAAX,IAA0B/C,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgD,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMkD,QAAQ,GAAGjD,MAAM,EAAvB;AAEAC,EAAAA,SAAS,CACR,MAAM,MAAM;AACXiD,IAAAA,YAAY,CAACD,QAAQ,CAACE,OAAV,CAAZ;AACA,GAHO,EAIR,EAJQ,CAAT;;AAOA,QAAMC,QAAQ,GAAG,MAAM;AACtB;AACA,QACC,0JAA0JC,IAA1J,CACCZ,KADD,CADD,EAIE;AACDrC,MAAAA,KAAK,CAACkD,IAAN,CAAWjD,aAAX,EAA0B;AAAEoC,QAAAA;AAAF,OAA1B,EACEc,IADF,CACQC,GAAD,IAAS;AACd,cAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAIA,IAAI,CAACG,KAAT,EAAgB;AACfhB,UAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACA,SAHD,MAGO;AACN;AACAF,UAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,UAAAA,WAAW,CAAC,KAAD,CAAX,CAHM,CAIN;;AACAE,UAAAA,aAAa,CAAC,IAAD,CAAb,CALM,CAMN;;AACAC,UAAAA,QAAQ,CAACE,OAAT,GAAmBU,UAAU,CAAC,MAAM;AACnCtB,YAAAA,OAAO,CAACuB,IAAR,CAAa,QAAb;AACA,WAF4B,EAE1B,IAF0B,CAA7B;AAGA;AACD,OAlBF,EAmBEC,KAnBF,CAmBSC,GAAD,IAAS;AACfN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA,OArBF;AAsBA,KA3BD,MA2BO;AACNlB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACD,GAjCD;;AAmCA,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEJ,OAAO,CAACvB,IAAnC;AAAA,4BACC,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEuB,OAAO,CAACrB,KAAzB;AAAgC,MAAA,IAAI,MAApC;AAAqC,MAAA,EAAE,EAAE,CAAzC;AAA4C,MAAA,EAAE,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,SAAS,EAAEqB,OAAO,CAACf,SAApD;AAAA,6BACC,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAA4B,QAAA,QAAQ,EAAC,IAArC;AAA0C,QAAA,KAAK,EAAE;AAAEwC,UAAAA,aAAa,EAAE;AAAjB,SAAjD;AAAA,gCACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,SAAS,EAAEzB,OAAO,CAACX,KAAxB;AAAA,kCACC,QAAC,UAAD;AACC,YAAA,SAAS,EAAEW,OAAO,CAACb,IADpB;AAEC,YAAA,OAAO,EAAC,IAFT;AAGC,YAAA,YAAY,MAHb;AAIC,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE;AAAd,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EASEe,UAAU,gBACV,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,QAAQ,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,GAIP,IAbL,EAcEE,QAAQ,gBACR,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,QAAQ,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADQ,GAIL,IAlBL,EAmBEE,UAAU,gBACV,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,QAAQ,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,GAIP,IAvBL,eAwBC;AAAM,YAAA,SAAS,EAAEP,OAAO,CAACN,IAAzB;AAA+B,YAAA,UAAU,MAAzC;AAAA,oCACC,QAAC,SAAD;AACC,cAAA,OAAO,EAAC,UADT;AAEC,cAAA,MAAM,EAAC,QAFR;AAGC,cAAA,QAAQ,MAHT;AAIC,cAAA,SAAS,MAJV;AAKC,cAAA,KAAK,EAAC,eALP;AAMC,cAAA,IAAI,EAAC,OANN;AAOC,cAAA,SAAS,MAPV;AAQC,cAAA,KAAK,EAAEO,KARR;AASC,cAAA,QAAQ,EAAGyB,CAAD,IAAO;AAChBxB,gBAAAA,QAAQ,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACA;AAXF;AAAA;AAAA;AAAA;AAAA,oBADD,eAcC,QAAC,MAAD;AACC,cAAA,SAAS,MADV;AAEC,cAAA,OAAO,EAAC,WAFT;AAGC,cAAA,KAAK,EAAC,SAHP;AAIC,cAAA,SAAS,EAAE5B,OAAO,CAACH,MAJpB;AAKC,cAAA,QAAQ,EAAEI,KAAK,KAAK,EAAV,GAAe,KAAf,GAAuB,IALlC;AAMC,cAAA,OAAO,EAAE,MAAMW,QAAQ,EANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAoDC,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,gBApDD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA+DA,CApHD;;GAAMd,K;UACWnC,U,EACAY,S;;;KAFXuB,K;AAsHN,eAAeA,KAAf","sourcesContent":["/**\n *\n * @author Anass Ferrak aka \" ThedevilA \" <an.ferrak@gmail.com>\n * GitHub repo: https://github.com/ThedevilA/Instagram-Web-App-MERN-Stack-Clone\n *\n */\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { RESET_PWD_URL } from \"../config/constants\";\n\n// Material-UI Components\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n// General Styles\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\theight: \"-webkit-fill-available\",\n\t},\n\timage: {\n\t\tbackgroundSize: \"cover\",\n\t\tbackgroundColor: \"#fafafa\",\n\t\tbackgroundImage: \"url(https://source.unsplash.com/random)\",\n\t\tbackgroundRepeat: \"no-repeat\",\n\t\tbackgroundPosition: \"center\",\n\t},\n\tcontainer: {\n\t\tmargin: \" auto 0px\",\n\t},\n\tLogo: {\n\t\tfontFamily: \"Grand Hotel, cursive\",\n\t\tmargin: \"40px 0px\",\n\t},\n\tpaper: {\n\t\tmarginTop: \"50px\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t},\n\n\tform: {\n\t\twidth: \"100%\", // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nconst Reset = () => {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\tconst [email, setEmail] = useState(\"\");\n\n\tconst [emailCheck, setEmailCheck] = useState(false);\n\tconst [errorMsg, setErrorMsg] = useState(false);\n\tconst [successMsg, setSuccessMsg] = useState(false);\n\n\tconst timerRef = useRef();\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t},\n\t\t[]\n\t);\n\n\tconst PostData = () => {\n\t\t// the Regex email validation was token from : https://emailregex.com/\n\t\tif (\n\t\t\t/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n\t\t\t\temail\n\t\t\t)\n\t\t) {\n\t\t\taxios.post(RESET_PWD_URL, { email })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst data = res.data;\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tsetEmailCheck(false);\n\t\t\t\t\t\tsetErrorMsg(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// make sure to not display another Alert instead\n\t\t\t\t\t\tsetEmailCheck(false);\n\t\t\t\t\t\tsetErrorMsg(false);\n\t\t\t\t\t\t// show the confirmation message\n\t\t\t\t\t\tsetSuccessMsg(true);\n\t\t\t\t\t\t// set a time before we redirect the user to login page\n\t\t\t\t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t\t\t\t\thistory.push(\"/login\");\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetErrorMsg(false);\n\t\t\tsetEmailCheck(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container className={classes.root}>\n\t\t\t<Grid className={classes.image} item sm={4} md={6} />\n\t\t\t<Grid item xs={12} sm={8} md={6} className={classes.container}>\n\t\t\t\t<Container component=\"main\" maxWidth=\"xs\" style={{ paddingBottom: \"64px\" }}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tclassName={classes.Logo}\n\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\tstyle={{ fontFamily: \"Grand Hotel, cursive \" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tKalyan Somalaraju\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{emailCheck ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tInvalid Email format — check it out!\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{errorMsg ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tNo User exists with that email — check it Again !\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{successMsg ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"success\">\n\t\t\t\t\t\t\t\tThe reset password link has been sent — check out your email inbox !\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetEmail(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\tdisabled={email !== \"\" ? false : true}\n\t\t\t\t\t\t\t\tonClick={() => PostData()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReset your Password\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Box mt={8}>\n\t\t\t\t\t\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Reset;\n"]},"metadata":{},"sourceType":"module"}